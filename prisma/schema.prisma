// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Usuario {
  id              Int     @id @default(autoincrement())
  nombre          String
  apellido_pat    String
  apellido_mat    String
  usuario         String  @unique
  claveHash       String
  tipo_id         Int
  tipo            TipoUsuario @relation(fields: [tipo_id], references: [id])
  compania_id     Int
  compania        Compania @relation(fields: [compania_id], references: [id])
 
  obacEmergencias       Emergencia[] @relation("ObacRelacion")
  tomaDatosEmergencias  Emergencia[] @relation("TomaDatosRelacion")

  obacTurno     Turno[] @relation("ObacTurnoRelacion")
  conductorTurno Turno[] @relation("ConductorTurnoRelacion")

  turnos        TurnoUsuario[]
  
  abonos          AbonoEmergencia[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt


  @@map("usuarios")
}

model TipoUsuario {
  id     Int @id @default(autoincrement())
  tipo   String

  usuarios Usuario[]
  @@map("tipos_usuario")
}

model Compania {
  id         Int @id @default(autoincrement())
  compania   String
  ruta_logo  String

  vehiculos VehiculoCompania[]
  usuarios Usuario[]

  @@map("companias")
}


model VehiculoCompania {
  id         Int @id @default(autoincrement())
  vehiculo   String
  compania_id Int
  compania            Compania @relation(fields: [compania_id], references: [id])

  vehiculo_emergencias VehiculoEmergencia[]
  
  @@map("vehiculos_compania")
}


// emergencia
model Emergencia{
  id              Int @id @default(autoincrement())
  direccion       String
  hora_despacho   DateTime?
  hora_6_3        DateTime?
  coordenadas     String?

  obac_id         Int?
  obac            Usuario? @relation(name:"ObacRelacion", fields: [obac_id], references: [id])
  
  toma_datos_id   Int?
  toma_datos      Usuario? @relation(name:"TomaDatosRelacion", fields: [toma_datos_id], references: [id])
  
  tipo_id         Int
  tipo            TipoEmergencia @relation(fields: [tipo_id], references: [id])

  tipo_accidente_id         Int?
  tipo_accidente            TipoAccidente? @relation(fields: [tipo_accidente_id], references: [id])

  magnitud_id       Int?
  magnitud          Magnitud? @relation(fields: [magnitud_id], references: [id])

  clima_id          Int?
  clima          EstadoClimatico? @relation(fields: [clima_id], references: [id])

  iluminacion_id    Int?
  iluminacion       TipoIluminacion? @relation(fields: [iluminacion_id], references: [id])

  resumen           String?
  peligros          String?

  abonos        AbonoEmergencia[]
  vehiculos     VehiculoEmergencia[]

  afectados     Afectado[]

  apoyos        ApoyoEmergencia[]
  
  comuna_id     Int?
  comuna        Comuna? @relation(fields:[comuna_id], references: [id])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("emergencias")
}

model Region{
  id      Int @id @default(autoincrement())
  region  String

  comunas Comuna[]

  @@map("regiones")
}

model Comuna{
  id      Int @id @default(autoincrement())
  comuna  String

  region_id Int
  region  Region @relation(fields:[region_id], references: [id])

  emergencias Emergencia[]

  @@map("comunas")
}

model AbonoEmergencia{
  id              Int @id @default(autoincrement())
  emergencia_id   Int
  emergencia      Emergencia @relation(fields: [emergencia_id], references: [id])

  usuarios_id     Int
  usuario         Usuario @relation(fields: [usuarios_id], references: [id])
  
  @@map("abonos_emergencia")
}

model VehiculoEmergencia{
  id              Int @id @default(autoincrement())
  emergencia_id   Int
  emergencia      Emergencia @relation(fields: [emergencia_id], references: [id])

  vehiculo_id     Int
  vehiculo        VehiculoCompania @relation(fields: [vehiculo_id], references: [id])

  @@map("vehiculos_emergencia")
}

model ApoyoEmergencia{
  id                Int @id @default(autoincrement())
  tipo_apoyo_id     Int
  tipoApoyo         TipoApoyo @relation(fields: [tipo_apoyo_id], references: [id])

  emergencia_id     Int
  Emergencia        Emergencia @relation(fields: [emergencia_id], references: [id])

  hora_solicitud    DateTime
  hora_llegada      DateTime?

  @@map("apoyos_emergencia")
}

model TipoApoyo{
  id                Int @id @default(autoincrement())
  codigo            String
  descripcion       String
  apoyosEmergencia  ApoyoEmergencia[]

  @@map("tipos_apoyo")
}

// tipos asociados a emergencia
model TipoEmergencia{
  id            Int @id @default(autoincrement())
  tipo          String
  descripcion   String

  emergencias Emergencia[]

  @@map("tipos_emergencia")
}

model TipoAccidente{
  id            Int @id @default(autoincrement())
  tipo          String

  emergencias Emergencia[]

  @@map("tipos_accidente")
}

model Magnitud{
  id            Int @id @default(autoincrement())
  magnitud      String
  descripcion   String?

  emergencias Emergencia[]

  @@map("magnitudes")
}

model EstadoClimatico{
  id            Int @id @default(autoincrement())
  estado      String

  emergencias Emergencia[]

  @@map("estados_climaticos")
}

model TipoIluminacion{
  id            Int @id @default(autoincrement())
  tipo      String

  emergencias Emergencia[]

  @@map("tipos_iluminacion")
}

// afectados
model Afectado{
  id              Int @id @default(autoincrement())
  nombre          String
  apellido        String
  run             String
  evaluacion      String
  nn              Boolean

  emergencia_id   Int
  emergencia      Emergencia @relation(fields:[emergencia_id], references:[id])

  afeccion        Afeccion[]
  @@map("afectados")
}

model Afeccion{
  id              Int @id @default(autoincrement())
  afectado_id     Int
  afectado        Afectado @relation(fields:[afectado_id], references:[id])

  @@map("afecciones")
}

model VehiculoInvolucrado{
  id              Int @id @default(autoincrement())
  marca           String
  modelo          String
  patente         String
  observaciones   String

  @@map("vehiculos_involucrados")
}

model IncendioPastizal{
  id              Int @id @default(autoincrement())
  observaciones   String

  @@map("incendios_pastizales")
}

model TipoCombustible{
  id     Int @id @default(autoincrement())
  tipo   String

  @@map("tipos_combustible")
}


// Incendio estructural
model IncendioEstructural{
  id              Int @id @default(autoincrement())
  observaciones   String

  tipo_construccion_id Int
  tipoConstruccion TipoConstruccion @relation(fields:[tipo_construccion_id], references:[id])

  tipo_estructura_id Int
  tipoEstructura TipoEstructura @relation(fields:[tipo_estructura_id], references:[id])

  @@map("incendios_estructurales")
}

model TipoConstruccion{
  id     Int @id @default(autoincrement())
  tipo   String

  incendioEstructural IncendioEstructural[]

  @@map("tipos_construccion")
}

model TipoEstructura{
  id     Int @id @default(autoincrement())
  tipo   String

  incendioEstructural IncendioEstructural[]

  @@map("tipos_estructura")
}


// turnos
model Turno{
  id              Int @id @default(autoincrement())
  fecha           DateTime

  obac_id         Int
  obac            Usuario @relation(name:"ObacTurnoRelacion", fields: [obac_id], references: [id])
  
  conductor_id    Int
  conductor       Usuario @relation(name:"ConductorTurnoRelacion", fields: [conductor_id], references: [id])

  turnos_usuarios TurnoUsuario[]

  @@map("turnos")
}

model TurnoUsuario{
  id              Int @id @default(autoincrement())
  usuario_id      Int
  usuario         Usuario @relation(fields: [usuario_id], references: [id])

  turno_id        Int
  turno           Turno @relation(fields: [turno_id], references: [id])

  @@map("turnos_usuarios")
}